EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
Prog7.exe_ -- emu8086 assembler version: 4.08  
 
[ 04/03/2023  --  15:31:00 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       PAGE 60,132          ;Numero de lineas y columnas
[   2]        :                                       TITLE PROG7.EXE      ;Nombre del programa
[   3]        :                                       .MODEL SMALL         ;Habilita dos segmentos de 64kb.
[   4]        :                                       .STACK 64            ;Definicion del segmento de pila
[   5]        :                                       ;_____________________________________
[   6]        :                                       
[   7]        :                                       .DATA                ;Definicion del segmento de datos
[   8]        :                                       
[   9]    0040: 4A 4F 52 47 45 20 44 41 52 41 59 20   ETIQ DB 'JORGE DARAY PADILLA PEREZ', '$' ;Etiqueta de cadena a usar
                50 41 44 49 4C 4C 41 20 50 45 52 45 
                5A 24                               
[  10]        :                                       ;_____________________________________
[  11]        :                                       .CODE                ;Inicio del codigo
[  12]    0060:                                       BEGIN PROC FAR       ;Directiva de inicio FAR
[  13]    0060: B8 04 00                              MOV AX, @DATA        ;Se le asigna el valor de AX a la direccion DATA
[  14]    0063: 8E D8                                 MOV DS, AX           ;Mover AX a DS
[  15]    0065: E8 0E 00                              CALL PANT0           ;LLamada a PANT0
[  16]    0068: E8 19 00                              CALL PANT2           ;Llamada a PANT2
[  17]    006B: E8 24 00                              CALL CURSOR          ;Llamada a CURSOR
[  18]    006E: E8 2B 00                              CALL DESPL0          ;Llamada a DESPL0
[  19]    0071: B8 00 4C                              MOV AX,4C00H         ;Salida a DOS
[  20]    0074: CD 21                                 INT 21H              ;Interrupcion 21H
[  21]        :                                       BEGIN ENDP           ;Fin de BEGIN
[  22]        :                                       ;_____________________________________
[  23]    0076:                                       PANT0 PROC NEAR      ;Iniciamos la funcion PANT0 directiva NEAR
[  24]    0076: B8 00 06                              MOV AX,0600H         ;Movemos el valor 0600H al registro AX(Parametros)
[  25]    0079: B7 F0                                 MOV BH,0F0H          ;Se escoge el color blanco del fondo
[  26]    007B: B9 00 00                              MOV CX,0000H         ;Filas y columnas de la izquierda a buscar
[  27]    007E: BA 4F 18                              MOV DX,184FH         ;Filas y columnas de la derecha a buscar
[  28]    0081: CD 10                                 INT 10H              ;Interuupcion 10H
[  29]    0083: C3                                    RET                  ;Retornamos a la funcion BEGIN
[  30]        :                                       PANT0 ENDP           ;Finaliza la funcion PANT0
[  31]        :                                       ;_____________________________________
[  32]    0084:                                       PANT2 PROC NEAR      ;Iniciamos la funcio PANT2
[  33]    0084: B8 00 06                              MOV AX,0600H         ;Movemos el valor 0600H al registro AX(Parametros)
[  34]    0087: B7 09                                 MOV BH,09H           ;Se escoge 09H 0 para el cuadro negro, y 9 para las letras en azul
[  35]    0089: B9 08 08                              MOV CX,0808H         ;Filas y columnas de la izquierda a buscar
[  36]    008C: BA 2F 12                              MOV DX,122FH         ;Filas y columnas de la derecha a buscar
[  37]    008F: CD 10                                 INT 10H              ;Interuupcion 10H
[  38]    0091: C3                                    RET                  ;Retornamos a la funcion BEGIN
[  39]        :                                       PANT2 ENDP           ;Finaliza la funcion PANT2
[  40]        :                                       ;_____________________________________
[  41]    0092:                                       CURSOR PROC NEAR     ;Iniciamos la funcion CURSOR
[  42]    0092: B4 02                                 MOV AH,02H           ;Movemos el valor de 02H (Cursor)
[  43]    0094: B7 00                                 MOV BH,00            ;Movemos el registro 00 al registro BH (pagina)
[  44]    0096: BA 0F 0D                              MOV DX,0D0FH         ;Movemos el valor de 0D0FH a DX (posicion)
[  45]    0099: CD 10                                 INT 10H              ;Interuupcion 10H
[  46]    009B: C3                                    RET                  ;Retornamos a la funcion BEGIN
[  47]        :                                       CURSOR ENDP          ;Finaliza la funcion CURSOR
[  48]        :                                       
[  49]        :                                       ;_____________________________________
[  50]    009C:                                       DESPL0 PROC NEAR     ;Iniciamos la funcion DESPL0
[  51]    009C: B4 09                                 MOV AH,09H           ;Movemos el valor 09H al registro AH
[  52]    009E: BA 00 00                              LEA DX, ETIQ         ;Cargamos la ETIQ al registro DX
[  53]    00A1: CD 21                                 INT 21H              ;Interrupcion 21H
[  54]    00A3: C3                                    RET                  ;Retornamos a la funcion BEGIN
[  55]        :                                       DESPL0 ENDP          ;Fin de DESPL0
[  56]        :                                       ;_____________________________________
[  57]        :                                       END BEGIN            ;Fin de BEGIN
[  58]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: A4      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 40      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: A8      -   check sum (l.byte)
0013: 82      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 06      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 06      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
